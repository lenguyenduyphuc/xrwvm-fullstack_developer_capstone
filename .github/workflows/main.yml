name: Code Quality Check
on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  lint_python:
    name: Python Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install flake8-docstrings
          pip install flake8-import-order

      - name: Create Flake8 config
        run: |
          echo "[flake8]
          max-line-length = 120
          exclude = .git,__pycache__,build,dist
          extend-ignore = E203,W503
          max-complexity = 10
          docstring-convention = google
          import-order-style = google
          application-import-names = server" > setup.cfg

      - name: Run Python Linter
        run: |
          flake8 ./server/djangoapp/ --count --statistics --show-source
          flake8 ./server/djangoproj/ --count --statistics --show-source

  lint_javascript:
    name: JavaScript Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install JavaScript dependencies
        run: |
          npm install -g jshint

      - name: Create JSHint config
        run: |
          echo '{
            "esversion": 8,
            "node": true,
            "asi": true,
            "globals": {
              "window": true,
              "document": true,
              "fetch": true
            }
          }' > .jshintrc

      - name: Run JavaScript Linter
        run: |
          jshint ./server/database/

  notify:
    name: Notification
    needs: [lint_python, lint_javascript]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check Status
        run: |
          if [ "${{ needs.lint_python.result }}" == "failure" ] || [ "${{ needs.lint_javascript.result }}" == "failure" ]; then
            echo "Linting failed! Please check the logs for errors."
            exit 1
          else
            echo "All linting checks passed successfully!"
          fi
